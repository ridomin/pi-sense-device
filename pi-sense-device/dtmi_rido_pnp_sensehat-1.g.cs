//  <auto-generated/> 

using Rido.MqttCore;
using Rido.MqttCore.PnP;

namespace dtmi_rido_pnp_sensehat;

public interface Isensehat 
{
    public const string ModelId = "dtmi:rido:pnp:sensehat;1";
    public IMqttBaseClient Connection { get; }
    public string InitialState { get; }
    public IReadOnlyProperty<string> Property_piri { get; set; }
    public IWritableProperty<int> Property_interval { get; set; }
    public ITelemetry<double> Telemetry_t1 { get; set; }
    public ITelemetry<double> Telemetry_t2 { get; set; }
    public ITelemetry<double> Telemetry_h { get; set; }
    public ITelemetry<double> Telemetry_p { get; set; }
    public ITelemetry<double> Telemetry_m { get; set; }

    public ICommand<Cmd_ChangeLCDColor_Request, Cmd_ChangeLCDColor_Response> Command_ChangeLCDColor { get; set; }
}



public class Cmd_ChangeLCDColor_Request : IBaseCommandRequest<Cmd_ChangeLCDColor_Request>
{
    //public DiagnosticsMode DiagnosticsMode { get; set; }
    public string request;

    public Cmd_ChangeLCDColor_Request DeserializeBody(string payload)
    {
        return new Cmd_ChangeLCDColor_Request()
        {
            //DiagnosticsMode = System.Text.Json.JsonSerializer.Deserialize<DiagnosticsMode>(payload)
            request = System.Text.Json.JsonSerializer.Deserialize<string>(payload)
        };
    }
}

public class Cmd_ChangeLCDColor_Response : BaseCommandResponse
{
    //public Dictionary<string, string> diagnosticResults { get; set; } = new Dictionary<string, string>();
    public string response;
}
